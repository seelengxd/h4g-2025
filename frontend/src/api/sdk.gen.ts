// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, urlSearchParamsBodySerializer } from './client';
import type { LogInAuthLoginPostData, LogInAuthLoginPostError, LogInAuthLoginPostResponse, LogoutAuthLogoutGetError, LogoutAuthLogoutGetResponse, GetUserAuthSessionGetData, GetUserAuthSessionGetError, GetUserAuthSessionGetResponse, GetAllUsersUsersGetData, GetAllUsersUsersGetError, GetAllUsersUsersGetResponse, CreateUserUsersPostData, CreateUserUsersPostError, CreateUserUsersPostResponse, GetUserUsersUserIdGetData, GetUserUsersUserIdGetError, GetUserUsersUserIdGetResponse, UpdateUserUsersUserIdPutData, UpdateUserUsersUserIdPutError, UpdateUserUsersUserIdPutResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Log In
 */
export const logInAuthLoginPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<LogInAuthLoginPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<LogInAuthLoginPostResponse, LogInAuthLoginPostError, ThrowOnError>({
        ...options,
        ...urlSearchParamsBodySerializer,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        },
        url: '/auth/login'
    });
};

/**
 * Logout
 */
export const logoutAuthLogoutGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<LogoutAuthLogoutGetResponse, LogoutAuthLogoutGetError, ThrowOnError>({
        ...options,
        url: '/auth/logout'
    });
};

/**
 * Get User
 */
export const getUserAuthSessionGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetUserAuthSessionGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserAuthSessionGetResponse, GetUserAuthSessionGetError, ThrowOnError>({
        ...options,
        url: '/auth/session'
    });
};

/**
 * Get All Users
 */
export const getAllUsersUsersGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAllUsersUsersGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAllUsersUsersGetResponse, GetAllUsersUsersGetError, ThrowOnError>({
        ...options,
        url: '/users/'
    });
};

/**
 * Create User
 */
export const createUserUsersPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateUserUsersPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserUsersPostResponse, CreateUserUsersPostError, ThrowOnError>({
        ...options,
        url: '/users/'
    });
};

/**
 * Get User
 */
export const getUserUsersUserIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetUserUsersUserIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserUsersUserIdGetResponse, GetUserUsersUserIdGetError, ThrowOnError>({
        ...options,
        url: '/users/{user_id}'
    });
};

/**
 * Update User
 */
export const updateUserUsersUserIdPut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UpdateUserUsersUserIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateUserUsersUserIdPutResponse, UpdateUserUsersUserIdPutError, ThrowOnError>({
        ...options,
        url: '/users/{user_id}'
    });
};