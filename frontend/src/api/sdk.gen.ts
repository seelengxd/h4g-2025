// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, urlSearchParamsBodySerializer, formDataBodySerializer } from './client';
import type { LogInAuthLoginPostData, LogInAuthLoginPostError, LogInAuthLoginPostResponse, LogoutAuthLogoutGetError, LogoutAuthLogoutGetResponse, GetUserAuthSessionGetData, GetUserAuthSessionGetError, GetUserAuthSessionGetResponse, GetAllUsersUsersGetData, GetAllUsersUsersGetError, GetAllUsersUsersGetResponse, CreateUserUsersPostData, CreateUserUsersPostError, CreateUserUsersPostResponse, GetUserUsersUserIdGetData, GetUserUsersUserIdGetError, GetUserUsersUserIdGetResponse, UpdateUserUsersUserIdPutData, UpdateUserUsersUserIdPutError, UpdateUserUsersUserIdPutResponse, CreateFileFilesPostData, CreateFileFilesPostError, CreateFileFilesPostResponse, GetAllProductsProductsGetData, GetAllProductsProductsGetError, GetAllProductsProductsGetResponse, CreateProductProductsPostData, CreateProductProductsPostError, CreateProductProductsPostResponse, GetProductProductsProductIdGetData, GetProductProductsProductIdGetError, GetProductProductsProductIdGetResponse, UpdateProductProductsProductIdPutData, UpdateProductProductsProductIdPutError, UpdateProductProductsProductIdPutResponse, GetAllOrdersOrdersGetData, GetAllOrdersOrdersGetError, GetAllOrdersOrdersGetResponse, CreateOrderOrdersPostData, CreateOrderOrdersPostError, CreateOrderOrdersPostResponse, GetOrderOrdersOrderIdGetData, GetOrderOrdersOrderIdGetError, GetOrderOrdersOrderIdGetResponse, UpdateOrderOrdersOrderIdPatchData, UpdateOrderOrdersOrderIdPatchError, UpdateOrderOrdersOrderIdPatchResponse, GetAllAuctionsAuctionsGetData, GetAllAuctionsAuctionsGetError, GetAllAuctionsAuctionsGetResponse, CreateAuctionAuctionsPostData, CreateAuctionAuctionsPostError, CreateAuctionAuctionsPostResponse, GetAuctionAuctionsAuctionIdGetData, GetAuctionAuctionsAuctionIdGetError, GetAuctionAuctionsAuctionIdGetResponse, MakeBidAuctionsAuctionIdBidsPostData, MakeBidAuctionsAuctionIdBidsPostError, MakeBidAuctionsAuctionIdBidsPostResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Log In
 */
export const logInAuthLoginPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<LogInAuthLoginPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<LogInAuthLoginPostResponse, LogInAuthLoginPostError, ThrowOnError>({
        ...options,
        ...urlSearchParamsBodySerializer,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        },
        url: '/auth/login'
    });
};

/**
 * Logout
 */
export const logoutAuthLogoutGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<LogoutAuthLogoutGetResponse, LogoutAuthLogoutGetError, ThrowOnError>({
        ...options,
        url: '/auth/logout'
    });
};

/**
 * Get User
 */
export const getUserAuthSessionGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetUserAuthSessionGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserAuthSessionGetResponse, GetUserAuthSessionGetError, ThrowOnError>({
        ...options,
        url: '/auth/session'
    });
};

/**
 * Get All Users
 */
export const getAllUsersUsersGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAllUsersUsersGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAllUsersUsersGetResponse, GetAllUsersUsersGetError, ThrowOnError>({
        ...options,
        url: '/users/'
    });
};

/**
 * Create User
 */
export const createUserUsersPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateUserUsersPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserUsersPostResponse, CreateUserUsersPostError, ThrowOnError>({
        ...options,
        url: '/users/'
    });
};

/**
 * Get User
 */
export const getUserUsersUserIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetUserUsersUserIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserUsersUserIdGetResponse, GetUserUsersUserIdGetError, ThrowOnError>({
        ...options,
        url: '/users/{user_id}'
    });
};

/**
 * Update User
 */
export const updateUserUsersUserIdPut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UpdateUserUsersUserIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateUserUsersUserIdPutResponse, UpdateUserUsersUserIdPutError, ThrowOnError>({
        ...options,
        url: '/users/{user_id}'
    });
};

/**
 * Create File
 */
export const createFileFilesPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateFileFilesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateFileFilesPostResponse, CreateFileFilesPostError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/files'
    });
};

/**
 * Get All Products
 */
export const getAllProductsProductsGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAllProductsProductsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAllProductsProductsGetResponse, GetAllProductsProductsGetError, ThrowOnError>({
        ...options,
        url: '/products/'
    });
};

/**
 * Create Product
 */
export const createProductProductsPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateProductProductsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateProductProductsPostResponse, CreateProductProductsPostError, ThrowOnError>({
        ...options,
        url: '/products/'
    });
};

/**
 * Get Product
 */
export const getProductProductsProductIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetProductProductsProductIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetProductProductsProductIdGetResponse, GetProductProductsProductIdGetError, ThrowOnError>({
        ...options,
        url: '/products/{product_id}'
    });
};

/**
 * Update Product
 */
export const updateProductProductsProductIdPut = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UpdateProductProductsProductIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateProductProductsProductIdPutResponse, UpdateProductProductsProductIdPutError, ThrowOnError>({
        ...options,
        url: '/products/{product_id}'
    });
};

/**
 * Get All Orders
 */
export const getAllOrdersOrdersGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAllOrdersOrdersGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAllOrdersOrdersGetResponse, GetAllOrdersOrdersGetError, ThrowOnError>({
        ...options,
        url: '/orders/'
    });
};

/**
 * Create Order
 */
export const createOrderOrdersPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateOrderOrdersPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateOrderOrdersPostResponse, CreateOrderOrdersPostError, ThrowOnError>({
        ...options,
        url: '/orders/'
    });
};

/**
 * Get Order
 */
export const getOrderOrdersOrderIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetOrderOrdersOrderIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetOrderOrdersOrderIdGetResponse, GetOrderOrdersOrderIdGetError, ThrowOnError>({
        ...options,
        url: '/orders/{order_id}'
    });
};

/**
 * Update Order
 * The only thing that may be updated is the order state.
 */
export const updateOrderOrdersOrderIdPatch = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UpdateOrderOrdersOrderIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<UpdateOrderOrdersOrderIdPatchResponse, UpdateOrderOrdersOrderIdPatchError, ThrowOnError>({
        ...options,
        url: '/orders/{order_id}'
    });
};

/**
 * Get All Auctions
 */
export const getAllAuctionsAuctionsGet = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetAllAuctionsAuctionsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAllAuctionsAuctionsGetResponse, GetAllAuctionsAuctionsGetError, ThrowOnError>({
        ...options,
        url: '/auctions/'
    });
};

/**
 * Create Auction
 */
export const createAuctionAuctionsPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CreateAuctionAuctionsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateAuctionAuctionsPostResponse, CreateAuctionAuctionsPostError, ThrowOnError>({
        ...options,
        url: '/auctions/'
    });
};

/**
 * Get Auction
 */
export const getAuctionAuctionsAuctionIdGet = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetAuctionAuctionsAuctionIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAuctionAuctionsAuctionIdGetResponse, GetAuctionAuctionsAuctionIdGetError, ThrowOnError>({
        ...options,
        url: '/auctions/{auction_id}'
    });
};

/**
 * Make Bid
 */
export const makeBidAuctionsAuctionIdBidsPost = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MakeBidAuctionsAuctionIdBidsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<MakeBidAuctionsAuctionIdBidsPostResponse, MakeBidAuctionsAuctionIdBidsPostError, ThrowOnError>({
        ...options,
        url: '/auctions/{auction_id}/bids'
    });
};